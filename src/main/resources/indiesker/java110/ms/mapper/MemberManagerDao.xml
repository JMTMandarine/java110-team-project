<?xml version="1.0" encoding="UTF-8"?>
<!-- MemberDao 클래스가 사용할 SQL이 들어 있는 파일 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="indiesker.java110.ms.dao.MemberManagerDao">

    <resultMap type="Supporter" id="SupporterMap">
        <id column="sno"        property="no"/>
        <result column="id"     property="id"/>
        <result column="email"  property="email"/>
        <result column="nik"    property="nickname"/>
        <result column="name"   property="name"/>
        <result column="capa"  property="capa"/>
        <result column="bas_addr" property="baseaddr"/>
        <result column="det_addr"    property="detailaddr"/>
        <result column="tel"   property="tel"/>
        <result column="etc"   property="message"/>
        <result column="genre" property="sgnere"/>
     <collection property="stagephotos" ofType="StagePhoto">
        <id column="spno"       property="spno"/>
        <result column="phot"  property="photo"/>
     </collection>
    </resultMap>
    
       <resultMap type="Busker" id="BuskerMap">
        <result column="name"   property="teamname"/>
        <result column="city"  property="city"/>
        <result column="genre"    property="teamgenre"/>
        <result column="tel"   property="tel"/>
        <result column="intro"   property="message"/>
         <result column="avi1"   property="avi1"/>
          <result column="avi2"   property="avi2"/>
    </resultMap>
    
    <resultMap type="Busker" id="BuskerDetail">
       <result column="id" property="id"></result>
       <result column="email" property="email"></result>
       <result column="nik" property="nickname"></result>
       <result column="bname" property="teamname"></result>
       <result column="genre" property="teamgenre"></result>
       <result column="city" property="city"></result>
       <result column="tel" property="tel"></result>
       <result column="inst" property="instrument"></result>
       <result column="intro" property="teamInfo"></result>
       <result column="phot" property="teamPhoto"></result>
    </resultMap>
    
    <resultMap type="Member" id="MemberDetail">
        <id column="mno" property="no"/>
        <result column="id" property="id"/>
        <result column="email" property="email"/>
        <result column="nik" property="nickname"/>
        <result column="phot" property="photo"/>
        <result column="memo" property="memo"/>
        <result column='genre0' property="genre0"/>
        <result column='genre1' property="genre1"/>
        <result column='genre2' property="genre2"/>
    </resultMap>

<!-- 전체 -->
<select id="findAll" resultType="MemberManager" parameterType="map">
SELECT m.id,m.nik,m.email,m.flag,m.cdt,m.memo
FROM memb as m
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="searchSelect" resultType="MemberManager" parameterType="map">
SELECT id,nik,email,flag,cdt,memo
FROM memb
<where>
<choose>
<when test="flag == 0">
cdt between #{cdt1} and #{cdt2}
</when>
<when test="flag == 1">
cdt = #{cdt2}
</when>
<when test="flag == 2">
nik = #{text}
</when>
<when test="flag == 3">
email = #{text}
</when>
</choose>
</where>
Limit #{paging.startRowNo},#{paging.pageSize}
</select> 

<update id="update" parameterType="Map">
update memb
    SET memo = #{memo}
    WHERE nik = #{nik}
</update>


<select id="detailMember" resultType="MemberManager" parameterType="String">
SELECT id,email,nik,phot,memo,genre0,genre1,genre2
FROM memb
where id = #{id}
</select>

<select id="detailBusker" resultType="Busker" parameterType="String">
SELECT m.id,m.email,m.nik,m.memo,b.name,b.genre,b.city,b.inst,b.strm,b.intro,b.phot
FROM memb as m ,busk as b
WHERE m.mno = b.bno
and m.id = #{id}
</select>

<select id="detailSupporter" resultType="Supporter" parameterType="String">
SELECT m.id,m.email,m.nik,m.memo,s.name,s.det_addr,s.genre,s.capa,s.tel,s.etc
FROM memb as m ,sup as s 
WHERE m.mno = s.sno
and m.id = #{id}
</select>

<!-- gradle 전체 목록 뽑기 -->
<select id="gradleList" resultType="GradleMember" parameterType="Map">
(SELECT m.nik,b.name,b.genre,m.email,m.flag,m.mno
FROM memb as m , busk as b
where m.mno = b.bno
and m.flag = '2'
and b.per = 'n')
UNION ALL
(SELECT m.nik,s.name,s.genre,m.email,m.flag,m.mno
FROM memb as m , sup as s
where m.mno = s.sno
and m.flag = '3'
and s.per = 'n')
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="gradleBusker" resultType="GradleMember" parameterType="MAP">
SELECT m.nik,b.name,b.genre,m.email,m.flag,m.mno
FROM memb as m , busk as b
where m.mno = b.bno
and m.flag = '2'
and b.per = 'n'
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="gradleSupporter"  resultType="GradleMember" parameterType="MAP">
SELECT m.nik,s.name,s.genre,m.email,m.flag,s.sno
FROM memb as m , sup as s
where m.mno = s.sno
and m.flag = '3'
and s.per = 'n'
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="gradleAjaxBusker" resultType="GradleMember" parameterType="map">
SELECT m.nik,b.name,b.genre,m.email,m.flag,b.bno
FROM memb as m , busk as b
where m.mno = b.bno
and m.flag = '2'
and b.per ='n'
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="gradleAjaxSupporter" resultType="GradleMember" parameterType="map">
SELECT m.nik,s.name,s.genre,m.email,m.flag,s.sno
FROM memb as m , sup as s
where m.mno = s.sno
and m.flag = '3'
and s.per = 'n'
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="gradleAjaxBuskerSelect" resultType="GradleMember" parameterType="map">
SELECT m.nik,b.name,b.genre,m.email,m.flag,m.mno, m.yn
<choose>
<when test="type == 2">
From memb as m, busk as b
where m.mno = b.bno and 
<choose>
<when test="flag.equals('email')">
email = #{text}
</when>
<when test="flag.equals('nik')">
nik = #{text}
</when>
</choose>
</when>

<when test="type == 3">
FROM memb as m , sup as b
where m.mno = b.sno and
<choose>
<when test="flag.equals('email')">
email = #{text}
</when>
<when test="flag.equals('nik')">
nik = #{text}
</when>
</choose>
</when>
</choose>
</select> 

<select id="findbyNo" resultMap="SupporterMap" parameterType="int">
SELECT s.name, s.capa,s.det_addr,s.genre,s.tel,s.etc,sp.phot, s.sno, sp.spno
FROM sup as s , stag_phot as sp
where s.sno = sp.sno
and s.sno = #{no}
</select>

<select id="fidnBuskbyNo" resultMap="BuskerMap" parameterType="int">
SELECT name,city,genre,tel,intro,avi1,avi2
FROM busk
where bno = #{no}
</select>

<update id="gradleBuskUpdate" parameterType="Map">
update busk
    SET per = 'y'
    WHERE bno = #{no}
</update>

<update id="gradleSupUpdate" parameterType="Map">
update sup
    SET per = 'y'
    WHERE sno = #{no}
</update>

<select id="findGradlePhoto" resultType="StagePhoto" parameterType="int" >
        select spno, phot as photo
          from stag_phot
         where sno = #{no};
    </select>
 
<select id="memListDetail" resultMap="MemberDetail" parameterType="String">
SELECT id,email,nik,phot,memo,genre0,genre1,genre2,mno
FROM memb
where nik = #{nik}
</select>

<select id="supListDetail" resultMap="SupporterMap" parameterType="String">
SELECT m.id,m.email,m.nik,s.name,s.det_addr,s.genre,s.capa,s.tel,s.etc,sp.phot,sp.spno,s.sno
FROM memb as m, sup as s, stag_phot as sp
where m.mno = s.sno and
s.sno = sp.sno and
m.nik = #{nik}
</select>

<select id="buskListDetail" resultMap="BuskerDetail" parameterType="String">
SELECT m.id,m.email,m.nik,b.name as bname,b.genre,b.city,b.tel,b.inst,b.intro,b.phot
FROM memb as m, busk as b
where m.mno = b.bno
and m.nik = #{nik}
</select>    

<select id="getMemo" parameterType="string" resultType="String">
select memo from memb where nik=#{nik}
</select>

<select id="totlist" resultType="Integer">
SELECT count(*)
FROM memb
</select>

<select id="memberAjax" parameterType="map" resultType="MemberManager">
SELECT m.id, m.nik,m.email,m.cdt,m.memo,m.flag
FROM memb as m
<choose>
<when test="flag lte 3">
where flag = #{flag}
</when>
<when test="flag gte 10">
where flag >= #{flag}
</when>
</choose>
Limit #{paging.startRowNo},#{paging.pageSize}
</select>

<select id="totlistFlag" parameterType="map" resultType="Integer">
select count(*) from
(SELECT m.id, m.nik,m.email,m.cdt,m.memo,m.flag
FROM memb as m
<choose>
<when test="flag lte 3">
where flag =  #{flag}) as b
</when>
<when test="flag gte 10">
where flag >=  #{flag}) as b
</when>
</choose>
</select>

<update id="upStopMem" parameterType="string">
UPDATE memb 
SET flag = flag +10
WHERE id=#{id}
</update>

<update id="upUnStopMem" parameterType="string">
UPDATE memb 
SET flag = flag -10
WHERE id=#{id}
</update>


<!-- tot gradle list  -->
<select id="totgradle" resultType="Integer">
select count(*) from 
((SELECT m.nik,b.name,b.genre,m.email,m.flag,m.mno
FROM memb as m , busk as b
where m.mno = b.bno
and m.flag = '2'
and b.per = 'n')
UNION ALL
(SELECT m.nik,s.name,s.genre,m.email,m.flag,m.mno
FROM memb as m , sup as s
where m.mno = s.sno
and m.flag = '3'
and s.per = 'n')) as b
</select>

<select id="totgradleAjaxBusker" resultType="Integer">
select count (*) from
(SELECT m.nik,b.name,b.genre,m.email,m.flag,b.bno
FROM memb as m , busk as b
where m.mno = b.bno
and m.flag = '2'
and b.per ='n') as b
</select>

<select id="totgradleAjaxSupporter" resultType="Integer">
select count(*)from 
(SELECT m.nik,s.name,s.genre,m.email,m.flag,s.sno
FROM memb as m , sup as s
where m.mno = s.sno
and m.flag = '3'
and s.per = 'n') as b
</select>

<select id="fingFlag" resultType="Integer" parameterType="map">
SELECT flag FROM memb
<choose>
<when test="flag.equals('nik')">
where nik = #{text}
</when>
<when test="flag.equals('email')">
where email = #{text}
</when>
</choose>
</select>

<select id="totsearchSelect" resultType="Integer" parameterType="map">
select count(*)
from
(SELECT id,nik,email,flag,cdt,memo
FROM memb

<where>
<choose>
<when test="flag == 0">
cdt between #{cdt1} and #{cdt2}) as b
</when>
<when test="flag == 1"> 
cdt = #{cdt2}) as b
</when>
<when test="flag == 2">
nik = #{text} ) as b
</when>
<when test="flag == 3">
email = #{text} ) as b
</when>
</choose>
</where>
</select> 


 </mapper>